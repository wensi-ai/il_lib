# @package _global_

policy_name: diffusion_rgb_transformer

# ====== DP specific ======
num_latest_obs: 2
horizon: 16
deployed_action_steps: 8
resnet_pretrained_ckpt_path: ???

# ====== Policy Module ======
module:
  _target_: il_lib.policies.DiffusionPolicy
  prop_dim: 25
  prop_keys: ["odom/base_velocity", "qpos/torso", "qpos/left_arm", "qpos/left_gripper", "qpos/right_arm", "qpos/right_gripper"]
  # ====== Feature Extractors ======
  feature_extractors:
    proprioception:
      _target_: il_lib.nn.common.MLP
      input_dim: ${module.prop_dim}
      hidden_dim: 512
      output_dim: 512
      hidden_depth: 2
      add_output_activation: true
    rgb:
      _target_: il_lib.nn.features.MultiviewResNet18
      views: 
      - robot_r1::robot_r1:zed_link:Camera:0::rgb
      - robot_r1::robot_r1:left_realsense_link:Camera:0::rgb
      - robot_r1::robot_r1:right_realsense_link:Camera:0::rgb
      resnet_output_dim: 512
      token_dim: 512
      load_pretrained: false
      # pretrained_ckpt_path: ${resnet_pretrained_ckpt_path}
      enable_random_crop: true
      random_crop_size: 94
  # ====== Feature Fusion ======
  feature_fusion_hidden_depth: 2
  feature_fusion_hidden_dim: 512
  feature_fusion_output_dim: 512
  feature_fusion_activation: "relu"
  feature_fusion_add_input_activation: false
  feature_fusion_add_output_activation: true
  # ====== Action ======
  action_dim: 23
  action_keys: ${action_keys}
  action_key_dims: ${action_key_dims}
  num_latest_obs: ${num_latest_obs}
  # ====== Backbone ======
  backbone:
    _target_: il_lib.nn.diffusion.TransformerForDiffusion
    input_dim: ${module.action_dim}
    output_dim: ${module.action_dim}
    horizon: ${horizon}
    n_obs_steps: ${num_latest_obs}
    cond_dim: ${module.feature_fusion_output_dim}
    n_layer: 2
    n_head: 8
    n_emb: 256
    p_drop_emb: 0.0
    p_drop_attn: 0.01
    n_cond_layers: 0
  # ====== Diffusion ======
  noise_scheduler:
    _target_: diffusers.schedulers.scheduling_ddim.DDIMScheduler
    num_train_timesteps: 100
    beta_start: 0.0001
    beta_end: 0.02
    # beta_schedule is important
    # this is the best we found
    beta_schedule: squaredcos_cap_v2
    clip_sample: True
    set_alpha_to_one: True
    steps_offset: 0
    prediction_type: epsilon # or sample
  noise_scheduler_step_kwargs: null
  num_denoise_steps_per_inference: 16
  horizon: ${horizon}
  deployed_action_steps: ${deployed_action_steps}
  optimizer: "adam"

data_module:
  obs_window_size: ${num_latest_obs}
  ctx_len: ${horizon}
  use_action_chunks: false
  visual_obs_types: ["rgb"]
  load_task_info: false
  multi_view_cameras:
    head: robot_r1::robot_r1:zed_link:Camera:0
    left_wrist: robot_r1::robot_r1:left_realsense_link:Camera:0
    right_wrist: robot_r1::robot_r1:right_realsense_link:Camera:0

robot:
  type: R1Pro
  controllers: